git remote is to define/add git project from server, like from github to local rep.
once this is added, you can 
{{{
     remote -v //to list remote gits
}}}
then you can git push, pull from remote like
{{{
     push -u origin master
     pull origin
}}}

another thing to note is when I try to clone OSGeo/gdal project using {
{{{
     clone https://github.com/OSGeo/gdal.git
and got the following message:
---------------------
0 [main] git 8660 fork: child -1 - forked process 4520 died unexpectedly, retry 0, exit code -1073741515, errno 11
error: cannot fork() for index-pack: Resource temporarily unavailable
fatal: fetch-pack: unable to fork off index-pack
---------------------
googling from internet resulted in a solution like
{{{
    $/usr/bin/git https://github.com/OSGeo/gdal.git
}}}
or {{{
    $ PATH=/usr/bin git clone https://github.com/OSGeo/gdal.git
}}}
both way worked
like nothing should be a problem if you really knows, eh?




== ssh to github ==
ref: https://help.github.com/articles/generating-ssh-keys
# make sure that .ssh exists under $HOME
# backup up the existing keys if any
{{{
    $make key_backup
    $mv id*.* key_backup 
  }}}
# generate new ssh key
{{{
    $ssh-keygen -t rsa -C 'hyanliu@gmail.com'
    ...
    passphrases: Rabbit1@
    ...
    xxxxxxxxxxxxxxxxxxxxxxx
  }}}
# add key to github
{{{
    $clip < ~/.ssh/id_rsa.pub
    // just another way to copy things onto clipboard for paste
  }}}
    - Go to "Account Settings"
    - Click 'SSH Keys" in the lest sidebar
    - Click "Add SSH key"
    - Paste your key into the "Key" field
    - Click "Add key"
# test everything out
{{{
    $ ssh -T git@github.com
    $ git remote add origin_ssh git@github.com:hyanliu/wikinotes.git
    $ git remote -v           // list remote - basically alias for remote urls
    $ git fetch origin_ssh    // to get everything without merge
    $ git pull                // get everything and try merge
    
    //$ git push [remote-name] [current-branch-name]
    //$ git remote show origin_ssh 
    
  }}}
  


